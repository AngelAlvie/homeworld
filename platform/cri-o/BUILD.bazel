load("//bazel:package.bzl", "homeworld_deb")
load("//bazel:substitute.bzl", "substitute")
load("//bazel:assert.bzl", "build_assert")

# TODO: for crio, use flags -ldflags '-s -w -X main.gitCommit="[...]" -X main.buildInfo=[...]'
# and -tags "exclude_graphdriver_devicemapper libdm_no_deferred_remove containers_image_ostree_stub seccomp containers_image_ostree_stub"
# (maybe?)

homeworld_deb(
    name = "package",
    bin = {
        "@com_github_cri_o_cri_o//cmd/crio": "/usr/bin/crio",
        "@com_github_cri_o_cri_o//conmon": "/usr/libexec/crio/conmon",
    },
    data = {
        ":crio.conf": "/etc/crio/crio.conf",
        "@com_github_cri_o_cri_o//:crio-umount.conf": "/usr/local/share/oci-umount/oci-umount.d/crio-umount.conf",
        ":crictl.yaml": "/etc/crictl.yaml",
        ":crio.service": "/usr/lib/systemd/system/crio.service",
        ":crio-shutdown.service": "/usr/lib/systemd/system/crio-shutdown.service",
    },
    package = "homeworld-cri-o",
    depends = [
        "homeworld-cni-plugins",
        "homeworld-oci-sig-policy",
        "homeworld-runc",
        "libgpgme11",
        "libostree-1-1",
    ],
    visibility = ["//visibility:public"],
)

substitute(
    name = "crio.conf.substituted",
    template = ":crio.conf.in",
    kfs = {
        "PAUSE_DIGEST": "//cri-o/pause:oci.ocidigest",
    },
)

build_assert(
    name = "crio.conf",
    src = ":crio.conf.substituted",
    message = "upstream's default crio.conf has changed; you must merge the changes into crio.conf, "
            + "and update crio.conf.upstream to be the new upstream version",
    condition = "diff -u $(location @com_github_cri_o_cri_o//:crio.conf) $(location :crio.conf.upstream)",
    deps = [
        "@com_github_cri_o_cri_o//:crio.conf",
        ":crio.conf.upstream"
    ],
)
