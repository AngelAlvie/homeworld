load(":upload.bzl", "upload")
load("//bazel:version.bzl", "generate_version_cache")

acis = [
    "//aci-pull-monitor/pullcheck:aci",
    "//dns-monitor:aci",
    "//dnsmasq:dnsmasq-nanny",
    "//flannel:aci",
    "//flannel-monitor:aci",
    "//kube-dns:kube-dns-main",
    "//kube-dns:kube-dns-sidecar",
    "//user-grant:aci",
]

debs = [
    "//aci-pull-monitor/aci-pull-monitor:package",
    "//apt-setup:package",
    "//auth-monitor:package",
    "//autostart:package",
    "//bootstrap-registry:package",
    "//etcd:package",
    "//etcd-metrics-exporter:package",
    "//keysystem:package",
    "//knc:package",
    "//kube-state-metrics:package",
    "//kubernetes:hyperkube",
    "//prometheus:package",
    "//prometheus-node-exporter:package",
    "//rkt:package",
    "//rkt-config:package",
    "//services:package",
    "//setup-queue:package",
    "//spire:package",
    "//spire/debian-iso:package",
]

upload(
    name = "upload",
    new_version_cache = ":new-version-cache",
    acis = acis,
    debs = debs,
    visibility = ["//visibility:public"],
)

generate_version_cache(
    name = "new-version-cache",
    acis = acis,
    debs = debs,
)

sh_binary(
    name = "parse-branch",
    srcs = [":src/wrapper.sh"],
)

exports_files([
    "BRANCH_NAME",
    "branches.yaml",
    "version-cache",
])

genrule(
    name = "apt-branch-rule",
    outs = ["DOWNLOAD_URL", "DOWNLOAD_URL_HOST", "KEYID"],
    srcs = ["BRANCH_NAME", "branches.yaml"] + ["//upload:" + x for x in glob(["src/*.py"])],
    tools = [":parse-branch"],
    cmd = "$(location :parse-branch) upload/src/parse.py $(location BRANCH_NAME) $(location branches.yaml) $(location DOWNLOAD_URL) $(location DOWNLOAD_URL_HOST) $(location KEYID)",
    visibility = ["//visibility:public"],
)

genrule(
    name = "keyexport",
    outs = ["keyring.gpg"],
    srcs = ["KEYID"],
    cmd = "gpg --export -- \"$$(cat '$<')\" >'$@'",
    visibility = ["//visibility:public"],
)

genrule(
    name = "keyarmor",
    outs = ["keyring.asc"],
    srcs = ["KEYID"],
    cmd = "gpg --export --armor -- \"$$(cat '$<')\" >'$@'",
    visibility = ["//visibility:public"],
)
