load(":upload.bzl", "upload")

upload(
    name = "upload",
    acis = [
        "//aci-pull-monitor/pullcheck:aci",
        "//dns-monitor:aci",
        "//dnsmasq:dnsmasq-nanny",
        "//flannel:aci",
        "//kube-dns:kube-dns-main",
        "//kube-dns:kube-dns-sidecar",
        "//kube-state-metrics:aci",
    ],
    debs = [
        "//aci-pull-monitor/aci-pull-monitor:package.deb",
        "//apt-setup:package.deb",
        "//auth-monitor:package.deb",
        "//autostart:package.deb",
        "//bootstrap-registry:package.deb",
        "//etcd:package.deb",
        "//etcd-metrics-exporter:package.deb",
        "//keysystem:package.deb",
        "//kubernetes:hyperkube.deb",
    ],
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "parse-branch",
    srcs = [":src/wrapper.sh"],
)

exports_files([
    "BRANCH_NAME",
    "branches.yaml",
])

genrule(
    name = "apt-branch-rule",
    outs = ["DOWNLOAD_URL", "DOWNLOAD_URL_HOST", "KEYID"],
    srcs = ["BRANCH_NAME", "branches.yaml"] + ["//upload:" + x for x in glob(["src/*.py"])],
    tools = [":parse-branch"],
    cmd = "$(location :parse-branch) upload/src/parse.py $(location BRANCH_NAME) $(location branches.yaml) $(location DOWNLOAD_URL) $(location DOWNLOAD_URL_HOST) $(location KEYID)",
    visibility = ["//visibility:public"],
)

genrule(
    name = "keyexport",
    outs = ["keyring.gpg"],
    srcs = ["KEYID"],
    cmd = "gpg --export -- \"$$(cat '$<')\" >'$@'",
    visibility = ["//visibility:public"],
)

genrule(
    name = "keyarmor",
    outs = ["keyring.asc"],
    srcs = ["KEYID"],
    cmd = "gpg --export --armor -- \"$$(cat '$<')\" >'$@'",
    visibility = ["//visibility:public"],
)
