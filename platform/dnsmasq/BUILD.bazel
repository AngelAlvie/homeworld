load("//bazel:package.bzl", "homeworld_oci")
load("//bazel:substitute.bzl", "substitute")
load("//python:resources.bzl", "py_resources")

# originally based on https://github.com/kubernetes/dns builds

homeworld_oci(
    name = "dnsmasq",
    bin = {
        "@dnsmasq//:dnsmasq": "/usr/sbin/dnsmasq",
    },
    data = {
        ":empty": "/var/run",
        ":dnsmasq.conf": "/etc/dnsmasq.conf",
    },
    exec = [
        "/usr/sbin/dnsmasq",
        "--keep-in-foreground",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//debian:debian-micro.tgz",
    ],
)

homeworld_oci(
    name = "dnsmasq-nanny",
    bin = {
        "@com_github_kubernetes_dns//cmd/dnsmasq-nanny": "/usr/bin/dnsmasq-nanny",
    },
    data = {
        ":empty": "/etc/k8s/dns/dnsmasq-nanny",
    },
    exec = ["/usr/bin/dnsmasq-nanny"],
    oci_dep = ":dnsmasq",
    visibility = ["//visibility:public"],
)

genrule(
    name = "empty-rule",
    outs = ["empty"],
    cmd = "mkdir $@",
)

substitute(
    name = "kubernetes.yaml",
    kfs = {
        "kube_dns_main_digest": "//kube-dns:kube-dns-main.ocidigest",
        "kube_dns_sidecar_digest": "//kube-dns:kube-dns-sidecar.ocidigest",
        "dnsmasq_nanny_digest": ":dnsmasq-nanny.ocidigest",
    },
    template = ":kubernetes.yaml.in",
    visibility = ["//visibility:public"],
)

py_resources(
    name = "kubelib",
    data = [":kubernetes.yaml"],
    visibility = ["//visibility:public"],
)
