commit d3a22cbd2fb1c316bcae4502ee20e99722780801
Author: Jeff Grafton <jgrafton@google.com>
Date:   Mon May 21 14:48:06 2018 -0700

    Reformat openapi/def.bzl and pkg/version/def.bzl using latest buildifier rules

diff --git a/pkg/generated/openapi/def.bzl b/pkg/generated/openapi/def.bzl
index dcb894282f..49b83fde34 100644
--- a/pkg/generated/openapi/def.bzl
+++ b/pkg/generated/openapi/def.bzl
@@ -1,31 +1,31 @@
 load("@io_bazel_rules_go//go:def.bzl", "go_library")
 load("@io_kubernetes_build//defs:go.bzl", "go_genrule")
 
-def openapi_library(name, tags, srcs, go_prefix, vendor_prefix="", openapi_targets=[], vendor_targets=[]):
-  deps = [
-      "//vendor/github.com/go-openapi/spec:go_default_library",
-      "//vendor/k8s.io/kube-openapi/pkg/common:go_default_library",
-  ] + ["//%s:go_default_library" % target for target in openapi_targets] + ["//vendor/%s:go_default_library" % target for target in vendor_targets]
-  go_library(
-      name=name,
-      tags=tags,
-      srcs=srcs + [":zz_generated.openapi"],
-      deps=deps,
-  )
-  go_genrule(
-      name = "zz_generated.openapi",
-      srcs = srcs + ["//" + vendor_prefix + "hack/boilerplate:boilerplate.go.txt"],
-      outs = ["zz_generated.openapi.go"],
-      cmd = " ".join([
-        "$(location //vendor/k8s.io/code-generator/cmd/openapi-gen)",
-        "--v 1",
-        "--logtostderr",
-        "--go-header-file $(location //" + vendor_prefix + "hack/boilerplate:boilerplate.go.txt)",
-        "--output-file-base zz_generated.openapi",
-        "--output-package " + go_prefix + vendor_prefix + "pkg/generated/openapi",
-        "--input-dirs " + ",".join([go_prefix + target for target in openapi_targets] + [go_prefix + "vendor/" + target for target in vendor_targets]),
-        "&& cp " + vendor_prefix + "pkg/generated/openapi/zz_generated.openapi.go $(location :zz_generated.openapi.go)",
-      ]),
-      go_deps = deps,
-      tools = ["//vendor/k8s.io/code-generator/cmd/openapi-gen"],
-)
+def openapi_library(name, tags, srcs, go_prefix, vendor_prefix = "", openapi_targets = [], vendor_targets = []):
+    deps = [
+        "//vendor/github.com/go-openapi/spec:go_default_library",
+        "//vendor/k8s.io/kube-openapi/pkg/common:go_default_library",
+    ] + ["//%s:go_default_library" % target for target in openapi_targets] + ["//vendor/%s:go_default_library" % target for target in vendor_targets]
+    go_library(
+        name = name,
+        srcs = srcs + [":zz_generated.openapi"],
+        tags = tags,
+        deps = deps,
+    )
+    go_genrule(
+        name = "zz_generated.openapi",
+        srcs = srcs + ["//" + vendor_prefix + "hack/boilerplate:boilerplate.go.txt"],
+        outs = ["zz_generated.openapi.go"],
+        cmd = " ".join([
+            "$(location //vendor/k8s.io/code-generator/cmd/openapi-gen)",
+            "--v 1",
+            "--logtostderr",
+            "--go-header-file $(location //" + vendor_prefix + "hack/boilerplate:boilerplate.go.txt)",
+            "--output-file-base zz_generated.openapi",
+            "--output-package " + go_prefix + vendor_prefix + "pkg/generated/openapi",
+            "--input-dirs " + ",".join([go_prefix + target for target in openapi_targets] + [go_prefix + "vendor/" + target for target in vendor_targets]),
+            "&& cp " + vendor_prefix + "pkg/generated/openapi/zz_generated.openapi.go $(location :zz_generated.openapi.go)",
+        ]),
+        go_deps = deps,
+        tools = ["//vendor/k8s.io/code-generator/cmd/openapi-gen"],
+    )
diff --git a/pkg/version/def.bzl b/pkg/version/def.bzl
index 9c018a4ef7..40fb271c78 100644
--- a/pkg/version/def.bzl
+++ b/pkg/version/def.bzl
@@ -1,24 +1,26 @@
 # Implements hack/lib/version.sh's kube::version::ldflags() for Bazel.
 def version_x_defs():
-  # This should match the list of packages in kube::version::ldflag
-  stamp_pkgs = [
-      "k8s.io/kubernetes/pkg/version",
-      # In hack/lib/version.sh, this has a vendor/ prefix. That isn't needed here?
-      "k8s.io/client-go/pkg/version",
-      ]
-  # This should match the list of vars in kube::version::ldflags
-  # It should also match the list of vars set in hack/print-workspace-status.sh.
-  stamp_vars = [
-      "buildDate",
-      "gitCommit",
-      "gitMajor",
-      "gitMinor",
-      "gitTreeState",
-      "gitVersion",
-  ]
-  # Generate the cross-product.
-  x_defs = {}
-  for pkg in stamp_pkgs:
-    for var in stamp_vars:
-      x_defs["%s.%s" % (pkg, var)] = "{%s}" % var
-  return x_defs
+    # This should match the list of packages in kube::version::ldflag
+    stamp_pkgs = [
+        "k8s.io/kubernetes/pkg/version",
+        # In hack/lib/version.sh, this has a vendor/ prefix. That isn't needed here?
+        "k8s.io/client-go/pkg/version",
+    ]
+
+    # This should match the list of vars in kube::version::ldflags
+    # It should also match the list of vars set in hack/print-workspace-status.sh.
+    stamp_vars = [
+        "buildDate",
+        "gitCommit",
+        "gitMajor",
+        "gitMinor",
+        "gitTreeState",
+        "gitVersion",
+    ]
+
+    # Generate the cross-product.
+    x_defs = {}
+    for pkg in stamp_pkgs:
+        for var in stamp_vars:
+            x_defs["%s.%s" % (pkg, var)] = "{%s}" % var
+    return x_defs
