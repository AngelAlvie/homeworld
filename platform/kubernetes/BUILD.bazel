load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("//bazel:package.bzl", "homeworld_deb")

go_library(
    name = "go_default_library",
    srcs = ["launch.go"],
    importpath = "github.com/sipb/homeworld/platform/kubernetes",
    visibility = ["//visibility:private"],
    deps = [
        "//keysystem/worldconfig/paths:go_default_library",
        "//kubernetes/wrapper:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
    ],
)

go_binary(
    name = "launch",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

homeworld_deb(
    name = "hyperkube",
    bin = {
        "@kubernetes//cmd/hyperkube": "/usr/bin/hyperkube",
    },
    package = "homeworld-hyperkube",
    visibility = ["//visibility:public"],
)

homeworld_deb(
    name = "kubernetes",
    bin = {
        ":launch": "/usr/bin/kube-launch",
    },
    data = {
        ":apiserver.service": "/usr/lib/systemd/system/apiserver.service",
        ":kube-ctrlmgr.service": "/usr/lib/systemd/system/kube-ctrlmgr.service",
        ":kube-proxy.service": "/usr/lib/systemd/system/kube-proxy.service",
        ":kube-scheduler.service": "/usr/lib/systemd/system/kube-scheduler.service",
        ":kubelet.service": "/usr/lib/systemd/system/kubelet.service",

        # the br_netfilter kernel module is needed for kube-proxy to function correctly
        ":br_netfilter.conf": "/usr/lib/modules-load.d/br_netfilter.conf",
    },
    depends = [
        "homeworld-cri-o",
        "homeworld-hyperkube",
    ],
    package = "homeworld-kubernetes",
    visibility = ["//visibility:public"],
)
